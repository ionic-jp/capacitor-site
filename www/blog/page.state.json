{"page.state":[{"announcement_bar":{},"slug":"bypassing-cors-with-the-http-plugin","title":"Bypassing CORS with the Capacitor Community HTTP Plugin","date":"2021-03-18T08:00:00.000Z","authorName":"Tessa","authorUrl":"https://twitter.com/halftes6","featuredImage":"/http/header-img.jpg","featuredImageAlt":"Http Header image","html":"<blockquote> <p>This is a guest post from Tessa. Tessa enjoys drawing and eating snacks, and currently works as a developer experience engineer. She frequently speaks about Vuejs and is a host on the <a href=\"https://enjoythevue.io\">Enjoy The Vue</a> podcast.</p> </blockquote> <p class=\"paragraph-intro\"><a href=\"https://www.codecademy.com/articles/what-is-cors\">CORS</a>, or Cross-Origin Resource Sharing, is not a popular word among developers working with front-end tech. A browser-enforced restriction mainly to protect users from a type of attack known as <a href=\"https://owasp.org/www-community/attacks/csrf\">cross-site request forgery</a>, CORS is more well known for the headaches it causes web developers, and that’s before we even think about mentioning mobile applications! But what if there were another way?</p> <p class=\"paragraph-intro\">Thanks to the <a href=\"https://github.com/capacitor-community/welcome\">Capacitor Community</a>, there is! The Capacitor Community is an open-source working group that builds and maintains useful tools and plugins for Ionic’s <a href=\"https://github.com/ionic-team/capacitor\">Capacitor runtime</a>, and today we’ll be looking at how to use its HTTP plugin to sidestep CORS and smoothly make successful <a href=\"https://www.tutorialspoint.com/http/http_requests.htm\">HTTP requests</a> across desktop and mobile devices.</p> <p class=\"paragraph-intro\">Let’s use the plugin to power an advice-a-day app to familiarize ourselves with its inner workings and API.</p> <img src=\"/assets/img/blog/http/image.jpeg\" alt=\"Sample quote from our app\"> <!-- more --> <h2 id=\"what-well-build\"><a href=\"#what-well-build\" class=\"heading-anchor\" aria-hidden=\"true\"></a>What we’ll build</h2><p>A Vue.js app loads and displays one cross-stitched piece of advice per day from the <a href=\"https://api.adviceslip.com/\">Advice Slip JSON API</a> and can be deployed cross platform.</p> <h2 id=\"what-well-learn\"><a href=\"#what-well-learn\" class=\"heading-anchor\" aria-hidden=\"true\"></a>What we’ll learn</h2><ul> <li>How to make a GET request with the HTTP plugin</li> <li>How to get, set, and delete cookies</li> </ul> <p><strong>Prior knowledge</strong></p> <p>In order to follow along, it might be helpful to have some understanding of the following technologies:</p> <ul> <li><a href=\"https://ionicframework.com/docs/vue/overview\">Ionic</a></li> <li><a href=\"https://v3.vuejs.org/\">Vue.js</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript</a></li> <li><a href=\"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\">TypeScript</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">Async/Await</a></li> <li><a href=\"https://www.udacity.com/course/version-control-with-git--ud123\">Git</a></li> <li><a href=\"https://yarnpkg.com/getting-started\">Yarn</a> or <a href=\"https://flaviocopes.com/npm\">NPM</a></li> <li><a href=\"https://www.educative.io/blog/bash-shell-command-cheat-sheet\">Bash</a></li> </ul> <h2 id=\"getting-started\"><a href=\"#getting-started\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Getting started</h2><p>You can either <a href=\"https://github.com/tessaSAC/stitch-in-time/tree/startingPoint\">clone the startingPoint branch</a> or start your own project from scratch with the following steps:</p> <ol> <li>Create a new Ionic Vue project as per <a href=\"https://ionicframework.com/docs/vue/quickstart#creating-a-project-with-the-ionic-cli\">Creating a project with the Ionic CLI</a></li> <li><code>cd</code> into your project and <a href=\"https://github.com/capacitor-community/http\">install the HTTP plugin</a> with the following commands:</li> </ol> <pre class=\"language-shell\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @capacitor-community/http\nnpx cap <span class=\"token function\">sync</span></code></pre> <p><strong>😬 Tip</strong></p> <p>If, after running both commands, you see the error <code>Capacitor could not find the web assets directory \"pathToYourRepo/dist\"</code>, try running <code>yarn build</code> or <code>npm build</code> and before <code>npx cap sync</code> a second time.</p> <ol> <li>Open your project in your favorite code editor; I like to use <a href=\"https://code.visualstudio.com/\">VSCode</a>.</li> <li><em>Optional:</em> Download <a href=\"https://www.fontspace.com/hovden-stitch-font-f43700\">HovdenStitch</a>, a free cross-stitch font, and move the <code>otf</code> file to your <code>public/assets</code> folder as <code>HovdenStitchRegular.otf</code>. Then in <code>src/App.vue</code>, copy and paste the below style tag at the bottom of the file to allow this custom font to be used across your app.</li> </ol> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HovdenStitch'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../public/assets/HovdenStitchRegular.otf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p><strong>💡 Tip:</strong></p> <p>Although for the purposes of this tutorial CSS styles will be contained within Vue’s <a href=\"https://v3.vuejs.org/guide/single-file-component.html\">Single File Components</a> for clarity, when it comes to your own projects, consider putting global styles in your <a href=\"https://ionicframework.com/docs/theming/themes\"><code>src/theme folder</code></a>.</p> <h2 id=\"designing-the-order-of-operations\"><a href=\"#designing-the-order-of-operations\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Designing the order of operations</h2><p>The basic idea for this app’s functionality is that it will fetch and display a max of one piece of advice per 24 hours, regardless of whether the user refreshes the page or leaves the app, and erase the current advice approximately one hour before new advice is fetched.</p> <p>While this concept may seem simple on its face, it requires quite a bit of state-tracking in order to ensure the expected behavior, and therefore you might be helpful to draw or write out a rough plan for how you expect things to go as I’ve done here:</p> <img src=\"/assets/img/blog/http/image-2.jpeg\" alt=\"Overview of our app\"> <h2 id=\"preparing-http-helper-functions\"><a href=\"#preparing-http-helper-functions\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Preparing HTTP helper functions</h2><p>In <code>src/views/Home.vue</code>, replace your <code>script</code> tag with the below starter code:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> defineComponent <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">IonPage</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@ionic/vue'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Home'</span><span class=\"token punctuation\">,</span>\n    components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">IonPage</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      advice<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Advice currently being displayed</span>\n      animationState<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Dynamic class that determines whether to fade advice in or out</span>\n      hourToFetchNewAdvice<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n      lastSaveDate<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The last time we fetched new Advice</span>\n      today<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">currentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">today</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">currentHour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">today</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">hourToEraseCurrentAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> oneHourPrior <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">hourToFetchNewAdvice</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>oneHourPrior <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> oneHourPrior <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">return</span> oneHourPrior<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// When we'll check if advice data needs to be changed</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// For more on`ionViewWillEnter`</span>\n      <span class=\"token comment\">// see: https://ionicframework.com/docs/vue/lifecycle#guidance-for-each-lifecycle-method</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <blockquote> <p>Optional: Move the <code>script</code> tag to be at the top of the file, above the <code>template</code> tag as per the <a href=\"https://vuejs.org/v2/style-guide/#Single-file-component-top-level-element-order-recommended\">Vue Style Guide</a>. Once you get used to this pattern it can speed up your development process by reducing the scrolling between <code>script</code> and <code>template</code> and between <code>template</code> and <code>style</code>.</p> </blockquote> <p>The first thing we’ll need to do is import our HTTP plugin by adding the following code to the top of the <code>script</code> tag as per the <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L106\">README</a>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token string\">'@capacitor-community/http'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Http <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span></code></pre> <p>Now we have access to the HTTP plugin and its helper methods inside this component, so we can add the following functions to our component’s <code>methods</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.adviceslip.com/advice'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Set dynamic class to fade in text</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeIn'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Save new advice</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>slip<span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// In other words:</span>\n      <span class=\"token comment\">// const dataInJs = JSON.parse(data)</span>\n      <span class=\"token comment\">// const slip = dataInJs.slip</span>\n      <span class=\"token comment\">// this.advice = slip.advice</span>\n      <span class=\"token comment\">// this.advice = this.advice.toUpperCase() — // font supports upper case only</span>\n\n    <span class=\"token comment\">// Update lastSaveDate</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If 24h have passed, fetch new advice</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// If 23 hours have passed, start fading out current advice</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToEraseCurrentAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Set dynamic class to fade out text</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeOut'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Clear advice from state after the fade out animation ends</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Check every 10m if it's time to fetch/erase advice</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateAdvice<span class=\"token punctuation\">,</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// Clear animation from advice after one playthrough</span>\n<span class=\"token comment\">// A safer approach might be to listen for `transistionend`</span>\n<span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre> <p>The <code>fetchAdvice</code> method is almost identical to the <code>GET</code> example in the HTTP Plugin’s README, but its syntax has been reordered to fit within Vue’s <code>methods</code> style. The <code>HTTP.request</code> method allows us to make <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\">HTTP calls</a> across different deploy targets without worrying about CORS issues. Here we’re using it to request advice from the <a href=\"https://api.adviceslip.com/#endpoint-random\">Advice Slip JSON API’s random advice GET endpoint</a>.</p> <p>Next, we’ll want to add the following code to <code>ionViewWillEnter</code> to fetch advice when the page loads:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If we haven't stored an hourToFetchNewAdvice before, calculate and store that and hourToEraseCurrentAdvice</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <h2 id=\"displaying-our-cross-stitched-advice\"><a href=\"#displaying-our-cross-stitched-advice\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Displaying our cross-stitched advice</h2><p>Open <code>views/Home.vue</code> and replace the existing <code>template</code> with the below code:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>IonPage</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Home<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yourImageHere<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Don<span class=\"token punctuation\">'</span>t forget to add alt text!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>embroidery<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>animationState<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{{ advice }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yourImageHere<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Don<span class=\"token punctuation\">'</span>t forget to add alt text!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>IonPage</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p>We won’t need to mess with this too much going forward, but let’s briefly about what’s happening here:</p> <ul> <li>This <em>view</em>, or page, is wrapped in the <code>IonPage</code> component to <a href=\"https://ionicframework.com/docs/vue/lifecycle\">enable us to leverage component lifecycle hooks</a>.</li> <li>The <code>Home</code> class will be used to visually center and style advice in the viewport.</li> <li>The <code>img</code> tags are placeholders for you to add personalized decorative flourishes to surround your advice; feel free to also <a href=\"https://github.com/tessaSAC/stitch-in-time/tree/main/public/assets\">copy the images from the base repo</a> or remove them altogether.</li> <li>The <code>p</code> tag is where we’ll render advice from the Advice Slip JSON API.</li> <li>The <a href=\"https://v3.vuejs.org/api/directives.html#v-bind\">v-bound</a> <code>animationState</code> class enables us to dynamically fade advice in and out as necessary.</li> </ul> <p>Next, replace the <code>style</code> tag with the following:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token comment\">/* Center and style the content */</span>\n  <span class=\"token selector\"><span class=\"token class\">.Home</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* Apply the custom font and style the text */</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HovdenStitch'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#002657</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Allow the flourishes to visually curve more closely around the text */</span>\n  <span class=\"token selector\"><span class=\"token class\">.embroidery</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">686</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">53</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token number\">-75</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Animate new advice being added and old advice being removed */</span>\n  <span class=\"token selector\"><span class=\"token class\">.fadeIn</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> fadeIn ease <span class=\"token number\">10</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token class\">.fadeOut</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> fadeOut ease <span class=\"token number\">10</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> fadeIn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> fadeOut</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p>Now if you run <code>yarn serve</code> or <code>npm serve</code>, you should be able to see some advice in your local preview in your browser!</p> <h2 id=\"persisting-state\"><a href=\"#persisting-state\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Persisting state</h2><p>While it’s great that our advice is rendering and all, you may have noticed a small catch: we get a new piece of advice on every page load, even though our <code>updateAdvice</code> method is supposed to wait 24 hours before fetching new advice. This is because our state is stored only within the component, which means when the component disappears, so does our data.</p> <p>To get around this, we’ll store some of our state in <a href=\"https://en.wikipedia.org/wiki/HTTP_cookie\">cookies</a>, which can outlive the component lifecycle.</p> <p>To get started, add the following helpers to the component’s <code>methods</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cookie <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>optionsObject<span class=\"token punctuation\">,</span>\n    ageDays<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// Set max number of days to save cookie</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p>This method is very similar to the <code>setCookie</code> example in the HTTP Plugin’s README, but its syntax has been reordered to fit within Vue’s <code>methods</code> style. It has also been augmented to expire any cookies after two days.</p> <p>One potential point of confusion here is that when looking at the <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/web.ts#L112\">Http.setCookie source code</a>, it may seem like this method is behaving essentially identically to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\">browser’s HTTP Set-Cookie approach</a>; however, if you try to pass in a value for <code>name</code> or <code>SameSite</code>, you will quickly discover this is not so. The <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L99\">method’s interface</a> reveals that this method will only take four potential pieces of data: <code>url</code>, <code>key</code>, <code>value</code>, and <code>ageDays</code>, where <code>key</code> becomes the cookie’s <code>name</code>, and <code>ageDays</code> its <code>Expires</code> value.</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p>This method is similar to the <code>deleteCookie</code> example in the HTTP Plugin’s README, with the addition of an optional <code>optionsObject</code> argument which can be passed to the HTTP Plugin’s <code>deleteCookie</code> method. If we check out <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L112\">the interface for this method in the source code</a>, we can see that it will accept either a <code>key</code> or a <code>url</code> to specify which cookie should be deleted.</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> allCookiesWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">getCookies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> allCookies <span class=\"token operator\">=</span> allCookiesWrapper<span class=\"token punctuation\">.</span>value\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> allCookies<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> currentCookie <span class=\"token operator\">=</span> allCookies<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentCookie<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> currentCookie<span class=\"token punctuation\">.</span>value\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p>This method is similar to the <code>getCookies</code> example in the HTTP Plugin’s README. However, that method will return an Array of all cookies, so if we want to get a specific one we’ll have to filter the list ourselves.</p> <p>Note that <code>forEach</code> will not work here as the loop cannot be short-circuited by a <code>return</code> statement.</p> <p>Now that we have access to some cookie helper methods, let’s use them.</p> <p>First, add them to <code>ionViewWillEnter</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check if there are a stored date, hour, and advice in cookies, i.e. outside component/session state</span>\n  <span class=\"token keyword\">await</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastSaveDate'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>lastSaveDate <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>lastSaveDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hourToFetchNewAdvice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>hourToFetchNewAdvice <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'advice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>advice <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> advice<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour\n\n  <span class=\"token comment\">// Store the hourToFetchNewAdvice in cookies regardless so it doesn't expire</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    key<span class=\"token operator\">:</span> <span class=\"token string\">'hourToFetchNewAdvice'</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p>Next, update <code>fetchAdvice</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.adviceslip.com/advice'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeIn'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>slip<span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Save the advice to a cookie, too</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token string\">'advice'</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate\n\n    <span class=\"token comment\">// Update lastSaveDate in cookies also</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token string\">'lastSaveDate'</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p>And <code>updateAdvice</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToEraseCurrentAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeOut'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n      <span class=\"token comment\">// Erase the advice from cookies as well</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'advice'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateAdvice<span class=\"token punctuation\">,</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <h2 id=\"celebrate\"><a href=\"#celebrate\" class=\"heading-anchor\" aria-hidden=\"true\"></a><strong>Celebrate!</strong></h2><p>We did it! Now the app will fetch and erase advice once every 24 hours as designed. 🎉</p> <h2 id=\"review\"><a href=\"#review\" class=\"heading-anchor\" aria-hidden=\"true\"></a><strong>Review</strong></h2><p>We covered a lot of concepts from the Capacitor Community HTTP Plugin today including:</p> <ul> <li>How to make an HTTP <code>GET</code> request</li> <li>How to save a cookie<ul> <li>Which properties of a cookie can be set with the plugin</li> </ul> </li> <li>How to get a <em>specific</em> cookie</li> <li>How to delete a <em>specific cookie</em></li> <li>How to use the source code to answer questions not covered by the README</li> </ul> <h2 id=\"next-steps\"><a href=\"#next-steps\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Next steps</h2><p>What’s next in the exciting world of cross-platform Vue apps? If you’re short on ideas, here’s a few suggestions for next steps</p> <ul> <li><a href=\"https://ionicframework.com/blog/best-practices-for-building-offline-apps\">Offline first</a>: Try persisting state using another method, such as service-worker caching</li> <li>PWA/mobile: Try deploying the app to your phone as a <a href=\"https://ionicframework.com/docs/vue/your-first-app/6-deploying-mobile\">Progressive Web App</a> or a native <a href=\"https://ionicframework.com/docs/vue/your-first-app/6-deploying-mobile\">Android/iOS one</a><ul> <li>Note: If you opted to generate your own project for this tutorial instead of cloning from the repo, you may need to follow some <a href=\"https://github.com/capacitor-community/http#installation\">additional installation steps</a> to get the HTTP Plugin working on Android</li> </ul> </li> <li>Loading state: How might you save the state of the app such that if the user exits while advice is fading in or out, the transition will resume at the same spot tnext time they reopen the app?</li> <li><a href=\"https://dev.to/biplov/15-fun-apis-for-your-next-project-5053\">Another API</a>: There are lots of free APIs out there; how would you apply the HTTP Plugin to a new project?</li> </ul> <p>🎉 Happy coding! 🎉</p>"},{"slug":"announcing-capacitor-3-0-rc","title":"Announcing Capacitor 3.0 Release Candidate","date":"2021-03-10T08:00:00.000Z","authorName":"Mike Hartington","authorUrl":"https://twitter.com/mhartington","featuredImage":"/v3-rc/cap-3-rc-img.png","featuredImageAlt":"Capacitor 3.0 Beta","html":"<p class=\"paragraph-intro\"><strong>Today I’m happy to announce that the release candidate for Capacitor 3.0 is finally here 🎉🎉🎉.</strong></p> <p>Not too long ago, <a href=\"https://capacitorjs.com/blog/announcing-capacitor-3-0-beta\">we announced Capacitor 3.0 beta</a> and put out a call for feedback from the community. Thanks to all your feedback and testing, we’ve reached the point where we’re ready to call Capacitor 3.0 feature complete and ready to move to RC.</p> <p>If you’re curious how to migrate to Capacitor 3.0, check out the <a href=\"https://capacitorjs.com/docs/v3/updating/3-0\">migration guide</a> we’ve published in our docs. This is a feature packed release, and we’re excited for folks to upgrade. Some key features include:</p> <ul> <li>Split plugins into their own packages</li> <li>CLI <code>run</code> command</li> <li>TypeScript config file</li> <li>Autoloading of Android plugins</li> </ul> <p>In addition to the <a href=\"https://capacitorjs.com/blog/announcing-capacitor-3-0-beta\">Beta release post</a>, which includes more details on these changes, we’ve also written about the <a href=\"https://ionicframework.com/blog/understanding-changes-to-capacitor-3-core-plugins/\">plugin upgrade process here</a>. Long story short, install the plugins you need and change your import statements</p> <pre class=\"language-bash\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @capacitor/<span class=\"token operator\">&lt;</span>plugin<span class=\"token operator\">&gt;</span></code></pre> <pre class=\"language-ts\"><code><span class=\"token comment\">// OLD</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Camera <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// NEW</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/camera'</span><span class=\"token punctuation\">;</span></code></pre> <p>We’re excited to ship this release and can’t wait for you all to <a href=\"https://github.com/ionic-team/capacitor/issues\">give us your feedback</a>!</p> <p>Cheers 🍻</p> <br> <div align=\"center\"> <blog-forum-link href=\"https://forum.ionicframework.com/t/announcing-capacitor-3-0-rc/205868\"> 👋 Join the discussion on the Forum </blog-forum-link> </div>"},{"slug":"community-adoption-of-capacitor","title":"Community Adoption of Capacitor","date":"2021-02-18T14:00:00.000Z","authorName":"Mike Hartington","authorUrl":"https://twitter.com/mhartington","featuredImage":"/community-adoption/cap-adoption-feature-image.png","featuredImageAlt":"Community Adoption of Capacitor","html":"<p class=\"paragraph-intro\">When Capacitor was first created by the Ionic team, our goal was to provide a more streamlined and modern approach to developing cross platform apps for iOS, Android, and the web. By taking advantage of modern native tooling and modern Web Platform features, we knew we could enable developers to build amazing native apps in a way that felt like web development.</p> <p class=\"paragraph-intro\">At first, we intended Capacitor to be a modern tool used by the Ionic community in place of alternatives like Cordova. But more recently, we’ve started to see Capacitor grow way beyond that. In fact, Capacitor is steadily becoming the de facto choice for most web developers building native mobile apps with the web, and a default target for many other web communities outside of the Ionic ecosystem..</p> <p class=\"paragraph-intro\">This is incredible and really shows how Capacitor is eclipsing even our own modest goals for the project — from popular frontend tools like Tailwind and Vue to alternative mobile UI libraries and more. Here are just a few recent examples:</p> <h2 id=\"framework7\"><a href=\"#framework7\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Framework7</h2><p><a href=\"https://framework7.io\">Framework7</a> is a mobile-ready UI library in the same vein as Ionic. Funny enough, people often compare the two and ask which one is better (as developers are want to do). But Framework7 has a dedicated and passionate community, much like Ionic has. So we were incredibly thrilled to see that with their latest V6 release, they’ve added support for using Capacitor as the native runtime of choice. This means that users of Framework7 can take advantage of all the features Capacitor provides when building native iOS and Android apps and PWAs, while using the tools that Framework7 developers are already familiar with. We’re so happy to see Framework7 adopt Capacitor and welcome them to the community.</p> <h2 id=\"nativescript\"><a href=\"#nativescript\" class=\"heading-anchor\" aria-hidden=\"true\"></a>NativeScript</h2><p>In addition to Framework7, we were also thrilled to see <a href=\"https://capacitor.nativescript.org/\">NativeScript</a> adopt Capacitor in the form of a plugin offering. As they note in <a href=\"https://nativescript.org/blog/announcing-nativescript-capacitor-beta/\">their blog post</a>, one of NativeScript’s features is being able to target Native APIs directly from JavaScript, so plugins can be built entirely in JavaScript. This can become quite a compelling feature if you need to integrate with an obscure 3rd party Native SDK. While still in beta, we’ve been impressed with we’ve and can’t wait to see what the community builds with it.</p> <h2 id=\"quasar\"><a href=\"#quasar\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Quasar</h2><p>For the more Vue-minded folks, <a href=\"https://quasar.dev\">Quasar</a> has fully integrated Capacitor into their toolchain. Similar to Ionic and Framework7, Quasar UI framework for Vue provides common building blocks for building web apps. As of last year, they’ve provided full integration into the Quasar CLI so that making use of Capacitor is a natural fit for their community.</p> <h2 id=\"vue\"><a href=\"#vue\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Vue</h2><p>While Quasar is built on top of <a href=\"https://v3.vuejs.org\">Vue</a>, Vue-proper has also started suggesting <a href=\"https://v3.vuejs.org/guide/mobile.html#capacitor\">Capacitor in their documentation</a>. With this, they’re signaling to their user that “Hey, if you want to take your Vue app further, use Capacitor and target native platforms”. This is something we’ve seen the community respond well too as we hear from so many of you that you want more Vue specific content or example apps.</p> <h2 id=\"tailwind\"><a href=\"#tailwind\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Tailwind</h2><p>If you haven’t heard of <a href=\"https://tailwindcss.com\">Tailwind</a> before, it’s a CSS toolchain for developers that makes scaffolding out common UI patterns a matter of adding a few classes to your markup. We’ve written about <a href=\"https://capacitorjs.com/blog/mobile-apps-with-tailwind-css-nextjs-ionic-and-capacitor\">our experience with it</a> and how Tailwind hit that nice sweet spot of minimalism and power-user features. Increasingly we’ve seen developers excited to use Tailwind with Capacitor and it’s no secret why. The speed at which you can develop your app’s UI and the ease of development Capacitor provides makes for a great pair. Add a bit of React, Angular, or Vue to the mix and you’re able to build some incredible features at record speed. We’re excited to see more folks in the Tailwind community look to Capacitor as their native runtime of choice.</p> <h2 id=\"to-ze-moon\"><a href=\"#to-ze-moon\" class=\"heading-anchor\" aria-hidden=\"true\"></a>To ze moon!</h2><p>In a short amount of time, Capacitor has grown from being a tool for Ionic developers to being the de facto way to build cross platform apps across the entire web community. This <a href=\"https://webnative.tech\">Web Native</a> approach to development is here to stay and we’re thrilled to see Capacitor leading the way.</p> <p>So thanks to the folks behind Framework7, NativeScript, Vue, Quasar, Tailwind, and others for welcoming Capacitor into your own communities. If you’re interested seeing what Capacitor can do, checkout our <a href=\"https://capacitorjs.com/docs\">docs</a>. We’re excited to see what you build 🍻</p>"},{"slug":"mobile-apps-with-tailwind-css-nextjs-ionic-and-capacitor","title":"Build Mobile Apps with Tailwind CSS, Next.js, Ionic Framework, and Capacitor","date":"2021-01-21T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","featuredImage":"/tailwind-nextjs-ionic/feature.png","featuredImageAlt":"Tailwind + Next.js + Ionic Framework + Capacitor","html":"<p class=\"paragraph-intro\">A very popular stack for building responsive web apps is <a href=\"https://tailwindcss.com/\">Tailwind CSS</a> and <a href=\"https://nextjs.org/\">Next.js</a> by <a href=\"https://vercel.com/\">Vercel</a>.</p> <p class=\"paragraph-intro\">Tailwind, a utility-first CSS framework that replaces the need to write custom class names or even any CSS at all in many cases, makes it easy to design responsive web apps through small CSS building blocks and a flexible design foundation.</p> <p class=\"paragraph-intro\">Next.js, a React framework for building high performance React apps, is one of the leading environments for building production React apps on the web.</p> <p class=\"paragraph-intro\">As these technologies have grown, they are increasingly used together for web app development (in fact, Next.js is working on an <a href=\"https://github.com/vercel/next.js/discussions/20030\">RFC for official Tailwind integration</a>). This has prompted many users of these projects to ask whether they can be used to build mobile apps, too.</p> <p class=\"paragraph-intro\">Turns out, they can! And they make a great fit for cross-platform mobile development when paired with <a href=\"https://ionicframework.com/\">Ionic Framework</a> and <a href=\"https://capacitorjs.com/\">Capacitor</a>.</p> <p class=\"paragraph-intro\">As I started playing with these technologies, I realized that each had a natural fit in a combined mobile stack, and I wanted to put together a solid starting foundation for others interested in building real iOS and Android apps using these technologies.</p> <p class=\"paragraph-intro\">If you’re confused by all the project names and how they work together, don’t worry, I’ll break down each part of the stack each project is concerned with, along with some visuals and code samples demonstrating how all the projects work together. At the end I’ll share <a href=\"https://github.com/mlynch/nextjs-tailwind-ionic-capacitor-starter\">a starter project</a> with these technologies installed and working together that can form the foundation of your next app.</p> <h2 id=\"the-stack-visualized\"><a href=\"#the-stack-visualized\" class=\"heading-anchor\" aria-hidden=\"true\"></a>The Stack Visualized</h2><img src=\"/assets/img/blog/tailwind-nextjs-ionic/layers.png\" alt=\"Diagram of layers in a Capacitor Tailwind Next.js Ionic app\"> <p>The above is a live screenshot of an React app built with Next.js that is using Ionic Framework and Tailwind for the UI experience, and Capacitor to natively deploy that app to iOS and provide access to any Native APIs the app uses.</p> <p>There are a lot of projects working in tandem to provide the full experience here. To visualize it, I’ve tried to overlay the different layers and how they correspond to each project in this diagram above.</p> <p>We can see that Capacitor is concerned with the entire app and device layer of the app, Next.js is concerned with the entire web/React app our code and UI is running in, then Ionic handles the “platform UI” including navigation toolbar (including system title and toolbar buttons) as well as the bottom tabs.</p> <p>Finally, Tailwind is used to then style and customize the content of each page, which is where the bulk of the app-specific styling will occur.</p> <h2 id=\"mobile-ui-and-native-runtime\"><a href=\"#mobile-ui-and-native-runtime\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Mobile UI and Native Runtime</h2><p>If your experience building with web technologies is primarily for desktop or responsive sites, you might not be familiar with mobile-focused libraries Ionic Framework and Capacitor.</p> <p><a href=\"https://ionicframework.com/\">Ionic Framework</a> is a cross-platform, mobile-focused UI library for the web. It provides ~100 components that implement platform UI standards across iOS and Android. Things like toolbars, navigation/transitions, tabs, dialog windows, and more. The big draw is those components work on the web and work in frameworks like React, Angular, Vue, or plain HTML/CSS/JS.</p> <p>Ionic Framework is highly popular and powers upwards of 15% of apps in the app store.</p> <p>Historically, Ionic Framework would be paired with a project like Cordova which provided the native iOS and Android building and runtime capabilities. However, most new Ionic Framework apps use Capacitor for this part of the stack.</p> <p><a href=\"https://capacitorjs.com/\">Capacitor</a> is a project built by the team behind Ionic Framework focused on the <em>native</em> side of a web-focused mobile app.</p> <p>Capacitor provides a plugin layer and runtime that runs web apps natively on iOS, Android, Desktop, and Web, and provides full access to device APIs and features (including extending the web environment by writing additional native Swift/Java code).</p> <p>As such, any popular web technologies and libraries can be used to build mobile apps with Capacitor, and then deploy the same apps with the same code to the web and desktop.</p> <p>And, to top it all off, Capacitor was just <a href=\"https://2020.stateofjs.com/en-US/technologies/mobile-desktop/\">rated the second highest in satisfaction</a> among popular Mobile &amp; Desktop Tools on the State of JS 2020 Survey! If your last experience with this mobile development approach was with Cordova, we think you’ll find Capacitor to be a big improvement.</p> <h2 id=\"introducing-the-nextjs-tailwind-css-ionic-framework-capacitor-starter\"><a href=\"#introducing-the-nextjs-tailwind-css-ionic-framework-capacitor-starter\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Introducing the Next.js + Tailwind CSS + Ionic Framework + Capacitor Starter</h2><p>Now that you have a sense for how these technologies all work together to make it easy for web developers to build mobile apps, let’s take a look at a real demo and starter project (<a href=\"https://github.com/mlynch/nextjs-tailwind-ionic-capacitor-starter\">GitHub repo</a>):</p> <img src=\"/assets/img/blog/tailwind-nextjs-ionic/screenshot.png\" alt=\"Next.js Tailwind Ionic Capacitor Starter\"> <p>Let’s take a look at the main Feed page (seen above in the screenshot) for an example of how the different technologies in use work together:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  IonPage<span class=\"token punctuation\">,</span>\n  IonHeader<span class=\"token punctuation\">,</span>\n  IonToolbar<span class=\"token punctuation\">,</span>\n  IonTitle<span class=\"token punctuation\">,</span>\n  IonButtons<span class=\"token punctuation\">,</span>\n  IonButton<span class=\"token punctuation\">,</span>\n  IonIcon<span class=\"token punctuation\">,</span>\n  IonContent<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ionic/react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> notificationsOutline <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ionicons/icons'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Notifications <span class=\"token keyword\">from</span> <span class=\"token string\">'./Notifications'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">'../ui/Card'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getHomeItems <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../store/selectors'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Store <span class=\"token keyword\">from</span> <span class=\"token string\">'../../store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FeedCard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> author<span class=\"token punctuation\">,</span> authorAvatar<span class=\"token punctuation\">,</span> image <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Card className<span class=\"token operator\">=</span><span class=\"token string\">\"my-4 mx-auto\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>img className<span class=\"token operator\">=</span><span class=\"token string\">\"rounded-t-xl h-32 w-full object-cover\"</span> src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>image<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"px-4 py-4 bg-white rounded-b-xl dark:bg-gray-900\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>h4 className<span class=\"token operator\">=</span><span class=\"token string\">\"font-bold py-0 text-s text-gray-400 dark:text-gray-500 uppercase\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>h2 className<span class=\"token operator\">=</span><span class=\"token string\">\"font-bold text-2xl text-gray-800 dark:text-gray-100\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"sm:text-sm text-s text-gray-500 mr-1 my-3 dark:text-gray-400\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"flex items-center space-x-4\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>authorAvatar<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"rounded-full w-10 h-10\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>h3 className<span class=\"token operator\">=</span><span class=\"token string\">\"text-gray-500 dark:text-gray-200 m-l-8 text-sm font-medium\"</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Card<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Feed</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> homeItems <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>getHomeItems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>showNotifications<span class=\"token punctuation\">,</span> setShowNotifications<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>IonPage<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>IonHeader<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>IonToolbar<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>IonTitle<span class=\"token operator\">&gt;</span>Feed<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonTitle<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>IonButtons slot<span class=\"token operator\">=</span><span class=\"token string\">\"end\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>IonButton onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setShowNotifications</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\n              <span class=\"token operator\">&lt;</span>IonIcon icon<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>notificationsOutline<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonButton<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonButtons<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonToolbar<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonHeader<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>IonContent className<span class=\"token operator\">=</span><span class=\"token string\">\"ion-padding\"</span> fullscreen<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>IonHeader collapse<span class=\"token operator\">=</span><span class=\"token string\">\"condense\"</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>IonToolbar<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>IonTitle size<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span><span class=\"token operator\">&gt;</span>Feed<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonTitle<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonToolbar<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonHeader<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>Notifications\n          open<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showNotifications<span class=\"token punctuation\">}</span>\n          onDidDismiss<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setShowNotifications</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">{</span>homeItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>FeedCard <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>i<span class=\"token punctuation\">}</span> key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonContent<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IonPage<span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Feed<span class=\"token punctuation\">;</span></code></pre> <p>As we can see, we use Ionic Framework controls (<code>IonPage</code>, <code>IonHeader</code>, <code>IonContent</code>, <code>IonToolbar</code>, etc) for the structure of the page (these controls implement iOS and Android platform-specific styles and navigation/transition behavior), then we use Tailwind for the page content that is where our custom design lives (which will tend to be in <code>IonContent</code>).</p> <p>If we look at another page that is just a simple list, we see that we don’t use Tailwind at all, because the user would expect this page to be a standard iOS/Android list and toggle button (<a href=\"https://github.com/mlynch/nextjs-tailwind-ionic-capacitor-starter/blob/main/components/pages/Settings.jsx\">code here</a>):</p> <img src=\"/assets/img/blog/tailwind-nextjs-ionic/settings.png\" alt=\"Settings Page Example\"> <p>So, we tend to use Tailwind more for pages with a lot of custom design and assets. That’s by design. Generally when building a native mobile app, we want to use platform conventions as much as possible, especially for experience and performance-sensitive elements like Lists, Toolbars, Tabs, and Form inputs. However, for the <code>Feed</code> page, which has a pretty custom UI experience, we end up getting a lot of mileage out of Tailwind.</p> <p>So, in general, the way to think about when to lean more on Ionic Framework and when to lean on Tailwind is when your UI experience will heavily use typical mobile UI elements (prefer Ionic components) or when it will be more custom (prefer Tailwind).</p> <p>Finally, this starter also comes with a few small opinions around folder structure and state management. For state management, the library <a href=\"https://lostpebble.github.io/pullstate/\">pullstate</a> is used which is a simple yet powerful state management library with a hooks-based API (I wrote <a href=\"https://dev.to/ionic/pullstate-simple-hooks-based-state-management-for-react-5bc4\">more about it here</a>). If want to use something else, removing it is easy.</p> <h2 id=\"deploying-to-ios-and-android\"><a href=\"#deploying-to-ios-and-android\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Deploying to iOS and Android</h2><p>The app can be easily deployed to iOS and Android using Capacitor and its local CLI tools. After running <code>npm install</code>, you’ll have the <code>npx cap</code> command available, which enables a <a href=\"https://capacitorjs.com/docs/basics/workflow\">native development workflow</a>:</p> <p>To add an iOS or Android native project:</p> <pre class=\"language-bash\"><code>npx cap <span class=\"token function\">add</span> ios\nnpx cap <span class=\"token function\">add</span> android</code></pre> <p>Then, to build the Next.js app, export it, and copy it to the native projects:</p> <pre class=\"language-bash\"><code><span class=\"token function\">npm</span> run build\n<span class=\"token function\">npm</span> run <span class=\"token builtin class-name\">export</span>\nnpx cap copy</code></pre> <p>This command is needed every time the built output changes. However, you can enable livereload during development (see the <code>README</code> for more info).</p> <p>Then, you can launch Xcode and/or Android Studio to build and run the native project:</p> <pre class=\"language-bash\"><code>npx cap <span class=\"token function\">open</span> ios\nnpx cap <span class=\"token function\">open</span> android</code></pre> <h2 id=\"next-steps\"><a href=\"#next-steps\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Next steps</h2><p>If you’ve been interested in building mobile apps using popular web dev projects like Next.js or Tailwind, hopefully this starter provides inspiration and a solid foundation for building your next app using web technologies. It’s worth mentioning this exact same approach can be used with other UI libraries (like material, bootstrap, or your own!).</p> <p>When you’re ready, dig into <a href=\"https://github.com/mlynch/nextjs-tailwind-ionic-capacitor-starter\">the starter project</a>, follow the <a href=\"https://capacitorjs.com/\">Capacitor</a> and <a href=\"https://ionicframework.com/\">Ionic Framework</a> docs, and get building!</p> <div align=\"center\"> <blog-forum-link href=\"https://forum.ionicframework.com/t/build-mobile-apps-with-tailwind-css-next-js-ionic-framework-and-capacitor/203596\"> 👋 Join the discussion on the Forum </blog-forum-link> </div>"},{"slug":"announcing-capacitor-3-0-beta","title":"Announcing Capacitor 3.0 Beta","date":"2021-01-14T08:00:00.000Z","authorName":"Dan Imhoff","authorUrl":"https://twitter.com/dwieeb","featuredImage":"/v3-beta/cap-3-beta-img.png","featuredImageAlt":"Capacitor 3.0 Beta","html":"<p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Today I’m thrilled to announce that Capacitor 3 is ready for public beta! The Capacitor team is looking forward to hearing feedback on it from our developer community. 💖</p> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"a-new-milestone\"><a href=\"#a-new-milestone\" class=\"heading-anchor\" aria-hidden=\"true\"></a>A New Milestone</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Last year <a href=\"/blog/announcing-capacitor-2-0\">we announced Capacitor 2</a>, which brought important platform updates to the ecosystem such as Swift 5 and AndroidX. Since then, we’ve been delighted to see massive adoption in the community. Usage has more than doubled this year alone! It’s clear that developers who use Capacitor share our commitment to staying modern and providing the very best app experiences.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">For 3.0, we are focusing our attention on these areas of improvement:</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Community involvement</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Adaptability</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">First-class APIs</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Developer experience and productivity</li> </ul> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Capacitor 3 is more than just the “next version” of Capacitor. It is a crucial milestone for the project: the core team has grown significantly since the 2.0 release and now has the bandwidth and experience necessary to dedicate more time to the community, more time for prototyping and innovation, more time for stability and maintenance, and more time to deliver on Capacitor’s promise of making it easy to build web apps that run natively on iOS, Android, and the Web.</p> <preview-end></preview-end>                                "},{"slug":"security-advisory-cve-2020-6506","title":"Security Advisory CVE-2020-6506","date":"2020-09-16T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"paragraph-intro\">Vulnerability detail: <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-6506\">https://nvd.nist.gov/vuln/detail/CVE-2020-6506</a></p> <p class=\"paragraph-intro\">A universal cross-site scripting security vulnerability was discovered in Android WebView that allows cross-origin iframes or links to execute arbitrary JavaScript in the top-level document. For an attack to be successful, a user would need to navigate to a website or iframe containing malicious code within WebView. The vulnerability has been fixed in Android WebView as of version 83.0.4103.106, however users must update their Android WebView from the Google Play Store.</p> <p class=\"paragraph-intro\">For users of the outdated Android WebView, Capacitor apps loading third party content in iframes or directly in the web view are only vulnerable if precautions are not taken. We are currently exploring a solution to help mitigate the vulnerability. We recommend taking the following precautions if your application may be vulnerable:</p> <h2 id=\"capacitor-configuration-capacitorconfigjson\"><a href=\"#capacitor-configuration-capacitorconfigjson\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Capacitor configuration (<code>capacitor.config.json</code>)</h2><p>The best line of defense is to only allow first-party trusted content in the web view.</p> <ul> <li>Do not modify the server.url to a third party or <strong>untrusted</strong> website.</li> <li>Do not add <strong>untrusted</strong> websites to server.allowNavigation.</li> </ul> <p>It is recommended that apps behaving as a web browser use the Browser plugin.</p> <h2 id=\"html-iframes\"><a href=\"#html-iframes\" class=\"heading-anchor\" aria-hidden=\"true\"></a>HTML iframes</h2><p>Care should be taken when using iframes in your application. If you need to include an iframe in your page, make sure the content is from a trusted source.</p> <p>The vulnerability can be mitigated by using the sandbox attribute. Using an empty value is the most restrictive configuration that will prevent an attack.</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">sandbox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com/risky.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p><strong>Caution</strong>: tokens can be added to the sandbox attribute to lift certain restrictions, however some configurations will cause an app to remain vulnerable, such as <code>“allow-popups allow-top-navigation allow-scripts”</code>.</p> <h2 id=\"further-information\"><a href=\"#further-information\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Further Information</h2><p>More information about the vulnerability can be found at <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1083819\">https://bugs.chromium.org/p/chromium/issues/detail?id=1083819</a> and <a href=\"https://alesandroortiz.com/articles/uxss-android-webview-cve-2020-6506/\">https://alesandroortiz.com/articles/uxss-android-webview-cve-2020-6506/</a>. Many thanks to Alesandro Ortiz for bringing this to our attention.</p>"},{"slug":"integrating-capacitorjs-plugins-with-nuxtjs","title":"Integrating CapacitorJS Plugins with NuxtJS","date":"2020-08-28T08:00:00.000Z","authorName":"Dan Pastori","authorUrl":"https://twitter.com/danpastori","html":"<blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The following is a guest blog post from Dan Pastori of <a href=\"https://serversideup.net\">Server Side Up</a>. Server Side Up is an online community that shares tutorials and resources about Vuejs, Laravel, WordPress, and more recently have started creating resources on how to deliver native apps with Capacitor.</p> </blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Using CapacitorJS with NuxtJS is a perfect combination. NuxtJS allows you to develop powerful, modern fronteneds using VueJS. Combined with CapacitorJS, you can take those modern frontends, compilie them to mobile, and deploy to the platform of your choice.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Working with CapacitorJS, the power of native device features is there for you to integrate into your application. These features include GPS, Haptics, Camera, Filesystem, etc. When I structure a NuxtJS frontend, I like to design it in a way that allows me to re-use important modules through-out components, pages, and layouts.</p> <preview-end></preview-end>                      "},{"slug":"turn-your-angular-app-native","title":"Turn your Angular App Native","date":"2020-08-17T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Angular is used to build seriously large applications, but did you know you can target iOS and Android (and PWA) from your codebase without many changes to your existing Angular app?</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">With Capacitor, any Angular app can be turned into an iOS and Android app with full access to native APIs and OS controls. Capacitor does this by providing a native runtime for web apps with a bridge to communicate from the web app to the native layer, along with many <a href=\"https://capacitorjs.jp/docs/apis\">Native APIs</a> and access to hundreds more from the community.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Perhaps a surprise to many Angular developers, Angular is already used to power a significant number of app store apps (<a href=\"https://appfigures.com/top-sdks/development/apps\">at least 15%</a>). This is because <a href=\"https://ionicframework.com/\">Ionic Framework</a> has been widely used as a mobile UI framework for Angular since the AngularJS days and many Cordova apps used Angular over the years.</p> <preview-end></preview-end>               "},{"slug":"how-capacitor-works","title":"How Capacitor Works","date":"2020-08-13T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Capacitor is a cross-platform native runtime for Web Native apps.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">At a high level, that means Capacitor takes a modern web app, and then packages it up to run on iOS, Android, and PWA with access to native platform features and OS-level controls.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Capacitor then acts as the <em>runtime</em> facilitating communication between the web app and the underlying OS.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Let’s dig in and explore how Capacitor works under the hood.</p> <preview-end></preview-end>                          "},{"slug":"native-react-apps-without-react-native","title":"Native React Apps Without React Native","date":"2020-07-14T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","featuredImage":"/native-wout-react-native.png","featuredImageAlt":"Native React Apps Without React Native","html":"<p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">In the React world, the primary way to build native iOS and Android apps has been React Native. Created by Facebook in 2015, React Native enables developers to use their React skills to build iOS and Android apps using platform native UI elements. React Native is popular and widely used, and it’s a great solution for many teams.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">However, React Native comes with a number of tradeoffs. First, it requires developers to build in a React Native specific way, using views/JSX for each platform, and using libraries that support react-native (as opposed to most React libraries that support react-dom). But perhaps most importantly, React Native is not a web environment, so it’s not possible for teams to take their web-based React apps and libraries to deploy native apps.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The net effect is that it’s not possible to take, say, a Material-UI React web app, and deploy it natively to the Apple App Store or Google Play Store with React Native.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">To do that, we need to take a look at <a href=\"https://capacitorjs.jp/\">Capacitor</a> – a native runtime for cross-platform web apps, including any and all React web apps.</p> <preview-end></preview-end>                      "},{"slug":"ioniconf-announcements","title":"Capacitor announcements at Ioniconf 2020","date":"2020-06-24T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Today at the first ever official Ioniconf, we unveiled a number of exciting updates to Capacitor and the Capacitor community.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">In no particular order, we announced:</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"/blog/ioniconf-announcements#capacitor-opening-up\">Capacitor opening up to all modern web technologies</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"/blog/ioniconf-announcements#capacitor-community\">The Capacitor Community project</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"/blog/ioniconf-announcements#capacitor-elements\">Capacitor Elements</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"/blog/ioniconf-announcements#deploy-to-app-store-for-capacitor\">Deploy to App Store for Capacitor</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"/blog/ioniconf-announcements#updated-site-domain-and-docs\">Updated site and domain</a></li> </ul> <preview-end></preview-end>                      "},{"slug":"announcing-capacitor-2-0","title":"Announcing Capacitor 2.0","date":"2020-04-08T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"paragraph-intro\">Today we are excited to announce Capacitor 2.0!</p> <p>Capacitor 2.0 offers some key platform updates as well as security and bug fixes. These include:</p> <ul> <li>Swift 5 and Xcode 11+ support</li> <li>Android 10 (SDK 29) and AndroidX support</li> <li>Bug fixes and usability improvements to 23+ core plugins</li> <li>Support for generating splash screens and icons</li> </ul> <p>We documented the whole update and talked about what’s next for Capacitor over on the Ionic blog.</p> <p>Check it out:</p> <p><a href=\"https://ionicframework.com/blog/announcing-capacitor-2-0/\">https://ionicframework.com/blog/announcing-capacitor-2-0/</a></p>"},{"slug":"announcing-capacitor-1-0","title":"Announcing Capacitor 1.0","date":"2019-05-22T08:00:00.000Z","authorName":"Max Lynch","authorUrl":"https://twitter.com/maxlynch","html":"<p class=\"paragraph-intro\">Today I’m thrilled to announce the 1.0 release of <a href=\"/\">Capacitor</a>, Ionic’s new Native API Container that makes it easy to build web apps that run on iOS, Android, and the web as Progressive Web Apps—with full access to native functionality on each platform.</p> <p>We documented this momentous occasion over on the Ionic blog, complete with a comparison to Cordova and where Capacitor is headed from here.</p> <p>Take a look: <a href=\"https://ionicframework.com/blog/announcing-capacitor-1-0/\">https://ionicframework.com/blog/announcing-capacitor-1-0/</a>.</p>"}],"components":["announcement-bar","site-backdrop","docs-dropdown","blog-post","ion-icon","blog-forum-link","docs-search","more-button","blog-newsletter","site-header","blog-page","site-root","capacitor-site"]}