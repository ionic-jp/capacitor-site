{"page.state":{"announcement_bar":{},"featuredImage":"/http/header-img.jpg","title":"Bypassing CORS with the Capacitor Community HTTP Plugin","description":"How to bypass CORS with the Http Plugin","slug":"bypassing-cors-with-the-http-plugin","date":"2021-03-18T08:00:00.000Z","authorName":"Tessa","authorUrl":"https://twitter.com/halftes6","featuredImageAlt":"Http Header image","html":"<blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">This is a guest post from Tessa. Tessa enjoys drawing and eating snacks, and currently works as a developer experience engineer. She frequently speaks about Vuejs and is a host on the <a href=\"https://enjoythevue.io\">Enjoy The Vue</a> podcast.</p> </blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\"><a href=\"https://www.codecademy.com/articles/what-is-cors\">CORS</a>, or Cross-Origin Resource Sharing, is not a popular word among developers working with front-end tech. A browser-enforced restriction mainly to protect users from a type of attack known as <a href=\"https://owasp.org/www-community/attacks/csrf\">cross-site request forgery</a>, CORS is more well known for the headaches it causes web developers, and thatâ€™s before we even think about mentioning mobile applications! But what if there were another way?</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Thanks to the <a href=\"https://github.com/capacitor-community/welcome\">Capacitor Community</a>, there is! The Capacitor Community is an open-source working group that builds and maintains useful tools and plugins for Ionicâ€™s <a href=\"https://github.com/ionic-team/capacitor\">Capacitor runtime</a>, and today weâ€™ll be looking at how to use its HTTP plugin to sidestep CORS and smoothly make successful <a href=\"https://www.tutorialspoint.com/http/http_requests.htm\">HTTP requests</a> across desktop and mobile devices.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3 paragraph-intro\">Letâ€™s use the plugin to power an advice-a-day app to familiarize ourselves with its inner workings and API.</p> <img src=\"/assets/img/blog/http/image.jpeg\" alt=\"Sample quote from our app\"> <!-- more --> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"what-well-build\"><a href=\"#what-well-build\" class=\"heading-anchor\" aria-hidden=\"true\"></a>What weâ€™ll build</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">A Vue.js app loads and displays one cross-stitched piece of advice per day from the <a href=\"https://api.adviceslip.com/\">Advice Slip JSON API</a> and can be deployed cross platform.</p> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"what-well-learn\"><a href=\"#what-well-learn\" class=\"heading-anchor\" aria-hidden=\"true\"></a>What weâ€™ll learn</h2><ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to make a GET request with the HTTP plugin</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to get, set, and delete cookies</li> </ul> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><strong>Prior knowledge</strong></p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">In order to follow along, it might be helpful to have some understanding of the following technologies:</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://ionicframework.com/docs/vue/overview\">Ionic</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://v3.vuejs.org/\">Vue.js</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\">TypeScript</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">Async/Await</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://www.udacity.com/course/version-control-with-git--ud123\">Git</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://yarnpkg.com/getting-started\">Yarn</a> or <a href=\"https://flaviocopes.com/npm\">NPM</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://www.educative.io/blog/bash-shell-command-cheat-sheet\">Bash</a></li> </ul> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"getting-started\"><a href=\"#getting-started\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Getting started</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">You can either <a href=\"https://github.com/tessaSAC/stitch-in-time/tree/startingPoint\">clone the startingPoint branch</a> or start your own project from scratch with the following steps:</p> <ol> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Create a new Ionic Vue project as per <a href=\"https://ionicframework.com/docs/vue/quickstart#creating-a-project-with-the-ionic-cli\">Creating a project with the Ionic CLI</a></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><code>cd</code> into your project and <a href=\"https://github.com/capacitor-community/http\">install the HTTP plugin</a> with the following commands:</li> </ol> <pre class=\"language-shell\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @capacitor-community/http\nnpx cap <span class=\"token function\">sync</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><strong>ðŸ˜¬ Tip</strong></p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">If, after running both commands, you see the error <code>Capacitor could not find the web assets directory \"pathToYourRepo/dist\"</code>, try running <code>yarn build</code> or <code>npm build</code> and before <code>npx cap sync</code> a second time.</p> <ol> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Open your project in your favorite code editor; I like to use <a href=\"https://code.visualstudio.com/\">VSCode</a>.</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><em>Optional:</em> Download <a href=\"https://www.fontspace.com/hovden-stitch-font-f43700\">HovdenStitch</a>, a free cross-stitch font, and move the <code>otf</code> file to your <code>public/assets</code> folder as <code>HovdenStitchRegular.otf</code>. Then in <code>src/App.vue</code>, copy and paste the below style tag at the bottom of the file to allow this custom font to be used across your app.</li> </ol> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HovdenStitch'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../public/assets/HovdenStitchRegular.otf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><strong>ðŸ’¡ Tip:</strong></p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Although for the purposes of this tutorial CSS styles will be contained within Vueâ€™s <a href=\"https://v3.vuejs.org/guide/single-file-component.html\">Single File Components</a> for clarity, when it comes to your own projects, consider putting global styles in your <a href=\"https://ionicframework.com/docs/theming/themes\"><code>src/theme folder</code></a>.</p> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"designing-the-order-of-operations\"><a href=\"#designing-the-order-of-operations\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Designing the order of operations</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The basic idea for this appâ€™s functionality is that it will fetch and display a max of one piece of advice per 24 hours, regardless of whether the user refreshes the page or leaves the app, and erase the current advice approximately one hour before new advice is fetched.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">While this concept may seem simple on its face, it requires quite a bit of state-tracking in order to ensure the expected behavior, and therefore you might be helpful to draw or write out a rough plan for how you expect things to go as Iâ€™ve done here:</p> <img src=\"/assets/img/blog/http/image-2.jpeg\" alt=\"Overview of our app\"> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"preparing-http-helper-functions\"><a href=\"#preparing-http-helper-functions\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Preparing HTTP helper functions</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">In <code>src/views/Home.vue</code>, replace your <code>script</code> tag with the below starter code:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> defineComponent <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">IonPage</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@ionic/vue'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Home'</span><span class=\"token punctuation\">,</span>\n    components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">IonPage</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      advice<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Advice currently being displayed</span>\n      animationState<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Dynamic class that determines whether to fade advice in or out</span>\n      hourToFetchNewAdvice<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n      lastSaveDate<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The last time we fetched new Advice</span>\n      today<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">currentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">today</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">currentHour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">today</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">hourToEraseCurrentAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> oneHourPrior <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">hourToFetchNewAdvice</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>oneHourPrior <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> oneHourPrior <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">return</span> oneHourPrior<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// When we'll check if advice data needs to be changed</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// For more on`ionViewWillEnter`</span>\n      <span class=\"token comment\">// see: https://ionicframework.com/docs/vue/lifecycle#guidance-for-each-lifecycle-method</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Optional: Move the <code>script</code> tag to be at the top of the file, above the <code>template</code> tag as per the <a href=\"https://vuejs.org/v2/style-guide/#Single-file-component-top-level-element-order-recommended\">Vue Style Guide</a>. Once you get used to this pattern it can speed up your development process by reducing the scrolling between <code>script</code> and <code>template</code> and between <code>template</code> and <code>style</code>.</p> </blockquote> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The first thing weâ€™ll need to do is import our HTTP plugin by adding the following code to the top of the <code>script</code> tag as per the <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L106\">README</a>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token string\">'@capacitor-community/http'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Http <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Now we have access to the HTTP plugin and its helper methods inside this component, so we can add the following functions to our componentâ€™s <code>methods</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.adviceslip.com/advice'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Set dynamic class to fade in text</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeIn'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Save new advice</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>slip<span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// In other words:</span>\n      <span class=\"token comment\">// const dataInJs = JSON.parse(data)</span>\n      <span class=\"token comment\">// const slip = dataInJs.slip</span>\n      <span class=\"token comment\">// this.advice = slip.advice</span>\n      <span class=\"token comment\">// this.advice = this.advice.toUpperCase() â€” // font supports upper case only</span>\n\n    <span class=\"token comment\">// Update lastSaveDate</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If 24h have passed, fetch new advice</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// If 23 hours have passed, start fading out current advice</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToEraseCurrentAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Set dynamic class to fade out text</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeOut'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Clear advice from state after the fade out animation ends</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Check every 10m if it's time to fetch/erase advice</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateAdvice<span class=\"token punctuation\">,</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// Clear animation from advice after one playthrough</span>\n<span class=\"token comment\">// A safer approach might be to listen for `transistionend`</span>\n<span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The <code>fetchAdvice</code> method is almost identical to the <code>GET</code> example in the HTTP Pluginâ€™s README, but its syntax has been reordered to fit within Vueâ€™s <code>methods</code> style. The <code>HTTP.request</code> method allows us to make <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\">HTTP calls</a> across different deploy targets without worrying about CORS issues. Here weâ€™re using it to request advice from the <a href=\"https://api.adviceslip.com/#endpoint-random\">Advice Slip JSON APIâ€™s random advice GET endpoint</a>.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Next, weâ€™ll want to add the following code to <code>ionViewWillEnter</code> to fetch advice when the page loads:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If we haven't stored an hourToFetchNewAdvice before, calculate and store that and hourToEraseCurrentAdvice</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"displaying-our-cross-stitched-advice\"><a href=\"#displaying-our-cross-stitched-advice\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Displaying our cross-stitched advice</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Open <code>views/Home.vue</code> and replace the existing <code>template</code> with the below code:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>IonPage</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Home<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yourImageHere<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Don<span class=\"token punctuation\">'</span>t forget to add alt text!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>embroidery<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>animationState<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{{ advice }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yourImageHere<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Don<span class=\"token punctuation\">'</span>t forget to add alt text!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>IonPage</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">We wonâ€™t need to mess with this too much going forward, but letâ€™s briefly about whatâ€™s happening here:</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">This <em>view</em>, or page, is wrapped in the <code>IonPage</code> component to <a href=\"https://ionicframework.com/docs/vue/lifecycle\">enable us to leverage component lifecycle hooks</a>.</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The <code>Home</code> class will be used to visually center and style advice in the viewport.</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The <code>img</code> tags are placeholders for you to add personalized decorative flourishes to surround your advice; feel free to also <a href=\"https://github.com/tessaSAC/stitch-in-time/tree/main/public/assets\">copy the images from the base repo</a> or remove them altogether.</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The <code>p</code> tag is where weâ€™ll render advice from the Advice Slip JSON API.</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">The <a href=\"https://v3.vuejs.org/api/directives.html#v-bind\">v-bound</a> <code>animationState</code> class enables us to dynamically fade advice in and out as necessary.</li> </ul> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Next, replace the <code>style</code> tag with the following:</p> <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token comment\">/* Center and style the content */</span>\n  <span class=\"token selector\"><span class=\"token class\">.Home</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* Apply the custom font and style the text */</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HovdenStitch'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#002657</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Allow the flourishes to visually curve more closely around the text */</span>\n  <span class=\"token selector\"><span class=\"token class\">.embroidery</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">686</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">53</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token number\">-75</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Animate new advice being added and old advice being removed */</span>\n  <span class=\"token selector\"><span class=\"token class\">.fadeIn</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> fadeIn ease <span class=\"token number\">10</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token class\">.fadeOut</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> fadeOut ease <span class=\"token number\">10</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> fadeIn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> fadeOut</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Now if you run <code>yarn serve</code> or <code>npm serve</code>, you should be able to see some advice in your local preview in your browser!</p> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"persisting-state\"><a href=\"#persisting-state\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Persisting state</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">While itâ€™s great that our advice is rendering and all, you may have noticed a small catch: we get a new piece of advice on every page load, even though our <code>updateAdvice</code> method is supposed to wait 24 hours before fetching new advice. This is because our state is stored only within the component, which means when the component disappears, so does our data.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">To get around this, weâ€™ll store some of our state in <a href=\"https://en.wikipedia.org/wiki/HTTP_cookie\">cookies</a>, which can outlive the component lifecycle.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">To get started, add the following helpers to the componentâ€™s <code>methods</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cookie <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>optionsObject<span class=\"token punctuation\">,</span>\n    ageDays<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// Set max number of days to save cookie</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">This method is very similar to the <code>setCookie</code> example in the HTTP Pluginâ€™s README, but its syntax has been reordered to fit within Vueâ€™s <code>methods</code> style. It has also been augmented to expire any cookies after two days.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">One potential point of confusion here is that when looking at the <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/web.ts#L112\">Http.setCookie source code</a>, it may seem like this method is behaving essentially identically to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\">browserâ€™s HTTP Set-Cookie approach</a>; however, if you try to pass in a value for <code>name</code> or <code>SameSite</code>, you will quickly discover this is not so. The <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L99\">methodâ€™s interface</a> reveals that this method will only take four potential pieces of data: <code>url</code>, <code>key</code>, <code>value</code>, and <code>ageDays</code>, where <code>key</code> becomes the cookieâ€™s <code>name</code>, and <code>ageDays</code> its <code>Expires</code> value.</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span>optionsObject<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">This method is similar to the <code>deleteCookie</code> example in the HTTP Pluginâ€™s README, with the addition of an optional <code>optionsObject</code> argument which can be passed to the HTTP Pluginâ€™s <code>deleteCookie</code> method. If we check out <a href=\"https://github.com/capacitor-community/http/blob/455dc0cb0add1b872dbc914077b9754df4d8c0f3/src/definitions.ts#L112\">the interface for this method in the source code</a>, we can see that it will accept either a <code>key</code> or a <code>url</code> to specify which cookie should be deleted.</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> allCookiesWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">getCookies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> allCookies <span class=\"token operator\">=</span> allCookiesWrapper<span class=\"token punctuation\">.</span>value\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> allCookies<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> currentCookie <span class=\"token operator\">=</span> allCookies<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentCookie<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> currentCookie<span class=\"token punctuation\">.</span>value\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">This method is similar to the <code>getCookies</code> example in the HTTP Pluginâ€™s README. However, that method will return an Array of all cookies, so if we want to get a specific one weâ€™ll have to filter the list ourselves.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Note that <code>forEach</code> will not work here as the loop cannot be short-circuited by a <code>return</code> statement.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Now that we have access to some cookie helper methods, letâ€™s use them.</p> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">First, add them to <code>ionViewWillEnter</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">ionViewWillEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check if there are a stored date, hour, and advice in cookies, i.e. outside component/session state</span>\n  <span class=\"token keyword\">await</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastSaveDate'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>lastSaveDate <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>lastSaveDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hourToFetchNewAdvice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>hourToFetchNewAdvice <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'advice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>advice <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> advice<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour\n\n  <span class=\"token comment\">// Store the hourToFetchNewAdvice in cookies regardless so it doesn't expire</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    key<span class=\"token operator\">:</span> <span class=\"token string\">'hourToFetchNewAdvice'</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Next, update <code>fetchAdvice</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token keyword\">async</span> <span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.adviceslip.com/advice'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeIn'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>slip<span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Save the advice to a cookie, too</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token string\">'advice'</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate\n\n    <span class=\"token comment\">// Update lastSaveDate in cookies also</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token string\">'lastSaveDate'</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">And <code>updateAdvice</code>:</p> <pre class=\"language-typescript\"><code><span class=\"token function\">updateAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToFetchNewAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentDate <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastSaveDate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchAdvice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentHour <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hourToEraseCurrentAdvice <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationState <span class=\"token operator\">=</span> <span class=\"token string\">'fadeOut'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnimationState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>advice <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n      <span class=\"token comment\">// Erase the advice from cookies as well</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'advice'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateAdvice<span class=\"token punctuation\">,</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"celebrate\"><a href=\"#celebrate\" class=\"heading-anchor\" aria-hidden=\"true\"></a><strong>Celebrate!</strong></h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">We did it! Now the app will fetch and erase advice once every 24 hours as designed. ðŸŽ‰</p> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"review\"><a href=\"#review\" class=\"heading-anchor\" aria-hidden=\"true\"></a><strong>Review</strong></h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">We covered a lot of concepts from the Capacitor Community HTTP Plugin today including:</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to make an HTTP <code>GET</code> request</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to save a cookie<ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Which properties of a cookie can be set with the plugin</li> </ul> </li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to get a <em>specific</em> cookie</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to delete a <em>specific cookie</em></li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">How to use the source code to answer questions not covered by the README</li> </ul> <h2 class=\"ui-heading ui-heading-2 ui-theme--editorial\" id=\"next-steps\"><a href=\"#next-steps\" class=\"heading-anchor\" aria-hidden=\"true\"></a>Next steps</h2><p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Whatâ€™s next in the exciting world of cross-platform Vue apps? If youâ€™re short on ideas, hereâ€™s a few suggestions for next steps</p> <ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://ionicframework.com/blog/best-practices-for-building-offline-apps\">Offline first</a>: Try persisting state using another method, such as service-worker caching</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">PWA/mobile: Try deploying the app to your phone as a <a href=\"https://ionicframework.com/docs/vue/your-first-app/6-deploying-mobile\">Progressive Web App</a> or a native <a href=\"https://ionicframework.com/docs/vue/your-first-app/6-deploying-mobile\">Android/iOS one</a><ul> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Note: If you opted to generate your own project for this tutorial instead of cloning from the repo, you may need to follow some <a href=\"https://github.com/capacitor-community/http#installation\">additional installation steps</a> to get the HTTP Plugin working on Android</li> </ul> </li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">Loading state: How might you save the state of the app such that if the user exits while advice is fading in or out, the transition will resume at the same spot tnext time they reopen the app?</li> <li class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\"><a href=\"https://dev.to/biplov/15-fun-apis-for-your-next-project-5053\">Another API</a>: There are lots of free APIs out there; how would you apply the HTTP Plugin to a new project?</li> </ul> <p class=\"ui-paragraph ui-paragraph--prose ui-paragraph-3\">ðŸŽ‰ Happy coding! ðŸŽ‰</p>"},"components":["announcement-bar","site-backdrop","docs-dropdown","blog-subnav","blog-post","ion-icon","docs-search","more-button","site-header","site-root","capacitor-site"]}